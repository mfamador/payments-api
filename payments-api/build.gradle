apply plugin: "kotlin-spring"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.avast.gradle.docker-compose"

dependencies {
    implementation "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:$springBootVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"

    testImplementation ("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: 'junit', module: 'junit'
    }

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

apply plugin: 'docker-compose'
dockerCompose {
    useComposeFiles = ["${rootProject.projectDir}/docker/docker-compose.yml"]
    captureContainersOutput = true
    stopContainers = true
    removeContainers = true
}.isRequiredBy(test)